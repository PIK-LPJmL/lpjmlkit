% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_output.R
\name{read_output}
\alias{read_output}
\title{Read LPJmL output file}
\usage{
read_output(
  fname = "file_name.bin",
  file_type = "meta",
  band_names = NULL,
  nstep = NULL,
  subset_list = NULL,
  version = NULL,
  order = NULL,
  firstyear = NULL,
  nyear = NULL,
  firstcell = NULL,
  ncell = NULL,
  nbands = NULL,
  cellsize_lon = NULL,
  scalar = NULL,
  cellsize_lat = NULL,
  datatype = NULL,
  endian = NULL,
  verbose = FALSE
)
}
\arguments{
\item{fname}{A string value giving the output-file name to read, including
its path and extension.}

\item{file_type}{A string value giving the output-file type. Valid options:
\code{raw}, a binary file without header;
\code{clm}, a binary file with header;
\code{meta} (default), a raw file complemented by a meta-information json file.}

\item{band_names}{A vector of strings providing the band names or
NULL to determine automatically from the metafile.}

\item{nstep}{A integer value defining the time step of the output file.
Valid values are 1 (yearly), 12 (monthly), 365 (daily).}

\item{subset_list}{A list defining the dimensions to be subset}

\item{version}{Integer indicating CLM-file header version,
between 1, 2, 3 or 4.}

\item{order}{Order of data items (see LPJmL code for supported values;
default: 1).}

\item{firstyear}{First year of data in the file.}

\item{nyear}{Number of years of data included in the file.}

\item{firstcell}{Index of first data item.}

\item{ncell}{Number of data items per band.}

\item{nbands}{Number of bands per year of data.}

\item{cellsize_lon}{Longitude cellsize in deg.}

\item{scalar}{Conversion factor applied to data when it is read by LPJmL.}

\item{cellsize_lat}{Latitude cellsize in deg.}

\item{datatype}{LPJmL data type in file (see LPJmL code for valid data type
codes)}

\item{endian}{Endianness to use for file (either "big" or "little", by
default uses platform-specific endianness \code{.Platform$endian}).}
}
\value{

}
\description{
Generic function to read LPJmL output files in different
formats. Depending on the format, arguments can be automatically detected,
or have to be passed on as individual arguments.
}
\seealso{

}
