% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_header.R
\name{create_header}
\alias{create_header}
\title{Create new LPJmL file header from scratch.}
\usage{
create_header(
  name = "LPJGRID",
  version = 3,
  order = 1,
  firstyear = 1901,
  nyear = 1,
  firstcell = 0,
  ncell,
  nbands = 2,
  cellsize_lon = 0.5,
  scalar = 1,
  cellsize_lat = cellsize_lon,
  datatype = 3,
  endian = .Platform$endian,
  verbose = TRUE
)
}
\arguments{
\item{name}{Header name attribute (default: "LPJGRID").}

\item{version}{CLM version to use (default: 3).}

\item{order}{Order of data items (see LPJmL code for supported values;
default: 1).}

\item{firstyear}{Start year of data in file (default: 1901).}

\item{nyear}{Number of years of data included in file (default: 1).}

\item{firstcell}{Index of first data item (default: 0).}

\item{ncell}{Number of data items per band.}

\item{nbands}{Number of bands per year of data (default: 2).}

\item{cellsize_lon}{Longitude cellsize in deg (default: 0.5).}

\item{scalar}{Conversion factor applied to data when it is read by LPJmL
(default: 0.01).}

\item{cellsize_lat}{Latitude cellsize in deg (default: same as cellsize_lon).}

\item{datatype}{LPJmL data type in file (see LPJmL code for valid data type
codes; default: 1).}

\item{endian}{Endianness to use for file (either "big" or "little", by
default uses platform-specific endianness \code{.Platform$endian}).}

\item{verbose}{If TRUE (the default), function provides some feedback on
datatype and when using default values for missing parameters. If FALSE,
only errors are reported.}
}
\value{
The function returns a list with 3 components:
\itemize{
\item name: The header name, e.g. "LPJGRID".
\item header: Vector of header values ('version', 'order', 'firstyear',
'nyear', 'firstcell', 'ncell', 'nbands', 'cellsize_lon', 'scalar',
'cellsize_lat', 'datatype').
\item endian: Endian used to write binary data, either "little" or "big".
}
}
\description{
Create a header in the format required by \code{write_header()}.
}
\details{
File headers in input files are used by LPJmL to determine the
structure of the file and how to read it.

Header names usually start with "LPJ" followed by a word or abbreviation
describing the type of input data. See LPJmL code for valid header names.

The version number determines the amount of header information included in
the file. All versions save the header name and header attributes 'version',
'order', 'firstyear', 'nyear', 'firstcell', 'ncell', and 'nbands'. Header
versions 2 and 3 add header attributes 'cellsize_lon' and 'scalar'. Header
version 3 adds header attributes 'cellsize_lat' and 'datatype'.

Valid values for 'order' are 1, 2, 3, and 4. The default for LPJmL input
files is 1. The default for LPJmL output files is 4, except for grid output
files which also use 1.

By default, input files contain data for all cells, indicated by setting
the 'firstcell' index to 0. If 'firstcell' > 0, LPJmL assumes the first
'firstcell' cells to be missing in data.

Valid codes for the 'datatype' attribute and the corresponding LPJmL data
types are: 0 (LPJ_BYTE), 1 (LPJ_SHORT), 2 (LPJ_INT), 3 (LPJ_FLOAT),
4 (LPJ_DOUBLE).

Default parameters of the function are valid for grid input files.
}
\examples{
header <- create_header(
  name = "LPJGRID",
  version = 3,
  order = 1,
  firstyear = 1901,
  nyear = 1,
  firstcell = 0,
  ncell = 67420,
  nbands = 2,
  cellsize_lon = 0.5,
  scalar = 0.01,
  cellsize_lat = 0.5,
  datatype = 1,
  endian = .Platform$endian,
  verbose = TRUE
)

}
\seealso{
\itemize{
\item \code{\link[=read_header]{read_header()}} for reading headers from LPJmL files.
\item \code{\link[=write_header]{write_header()}} for writing headers to files.
}
}
