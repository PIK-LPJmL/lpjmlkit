% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/submit_lpjml.R
\name{submit_lpjml}
\alias{submit_lpjml}
\title{Submit LPJmL}
\usage{
submit_lpjml(
  run_details,
  model_path,
  output_path = NULL,
  group = "lpjml",
  sclass = "short",
  ntasks = 256,
  wtime = "",
  blocking = "",
  no_submit = FALSE
)
}
\arguments{
\item{run_details}{tibble with at least "sim_name" defined as columns.
Runs as rows. Optional pseudo parameters "order" and
"dependency" used for subsequent runs (see details). Hint:
\link[lpjmlKit]{write_config} returns a tibble in the required format}

\item{model_path}{character string providing the path to LPJmL
(equal to LPJROOT)}

\item{output_path}{character string - if output_path differs from
model_path - path where an output, a restart and a configuration
folder are created}

\item{group}{character string, provide a group for which the job is
submitted. Default is "lpjml"}

\item{sclass}{character string, define the job classification, for more
information have a look \href{https://www.pik-potsdam.de/en/institute/about/it-services/hpc/user-guides/slurm#section-5}{here}.
Defaults to "short".}

\item{ntasks}{integer, define the number of tasks/threads, for more
information have a look \href{https://www.pik-potsdam.de/en/institute/about/it-services/hpc/user-guides/slurm#section-18}{here}.}

\item{wtime}{character string, defining the time limit which can be an
advantage to get faster to the top of the (s)queue. For more information
have a look \href{https://www.pik-potsdam.de/en/institute/about/it-services/hpc/user-guides/slurm#section-18}{here}.}

\item{blocking}{integer, cores to be blocked. For more information
have a look \href{https://www.pik-potsdam.de/en/institute/about/it-services/hpc/user-guides/slurm#section-18}{here}.}

\item{no_submit}{boolean, do not submit to slurm - use to test if
\code{run_details} set correctly}
}
\value{
see \code{run_details}, extended with columns "job_id" and "status".
}
\description{
LPJmL runs are submitted to Slurm using config*.json files written by
\link[lpjmlKit]{write_config}. \code{write_config} returns a tibble that can be
used as an input (see \code{run_details}). It serves the details to submit sinlge
or multiple (dependent/subsequent) model runs.
}
\details{
Supply a \link[tibble]{tibble} for \code{run_details} in the form
of (random example), generated by \link[lpjmlKit]{write_config}:\tabular{l}{
   \strong{sim_name} \cr
   scen1_spinup \cr
   scen2_transient \cr
}


To perform subsequent runs provide pseudo parameters order and dependency
as in the following example:\tabular{lrl}{
   \strong{sim_name} \tab \strong{order} \tab \strong{dependency} \cr
   scen1_spinup \tab 1 \tab NA \cr
   scen2_transient \tab 2 \tab scen1 _spinup \cr
}
}
\examples{

\dontrun{
library(lpjmlKit)
library(tibble)

model_path <- paste0("/home/",Sys.getenv("USER"), "/LPJmL_internal")
output_path <-paste0("/home/",Sys.getenv("USER"), "/my_runs")

# basic
my_params <- tibble(
 sim_name = c("scen1", "scen2"),
 random_seed = as.integer(c(42, 666)),
 pftpar.1.name = c("first_tree", NA),
 param.k_temp = c(NA, 0.03),
 firewood = c(TRUE, FALSE)
)
config_details <- write_config(my_params, model_path, output_path)
run_details <- submit_lpjml(run_details = config_details,
                            model_path = model_path,
                            output_path = output_path)

run_details
#   sim_name      job_id   status       
#   <chr>           <int>  <chr>        
# 1 scen1         2123525  submitted    
# 2 scen2         2123526  submitted    

# with dependent runs and pipe notations
run_details2 <- tibble(
  sim_name = c("scen1_spinup", "scen1_transient"),
  random_seed = as.integer(c(1, 42)),
  order = c(1, 2),
  dependency = c(NA, "scen1_spinup")
) \%>\%
  write_config(my_params, model_path, output_path) \%>\%
  submit_lpjml(model_path, output_path)

run_details2
#   sim_name        order dependency     job_id status       
#   <chr>           <dbl> <chr>           <dbl> <chr>        
# 1 scen1_spinup        1 NA            2123525 not submitted
# 2 scen1_transient     2 scen1_spinup  2123526 not submitted

}

}
