% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_config.R
\name{check_config}
\alias{check_config}
\title{Check validity of LPJmL config JSON files}
\usage{
check_config(x, model_path, output_path = NULL, return_output = FALSE)
}
\arguments{
\item{x}{job_details object returned by \link[lpjmlkit]{write_config} or
character vector providing the config file names
(hint: returns x as a list entry)}

\item{model_path}{character string providing the path to LPJmL
(equal to LPJROOT)}

\item{output_path}{character string - if output_path differs from
model_path - path where an output, a restart and a configuration
folder are created}

\item{return_output}{boolean - if FALSE print stdout/stderr else return.
Defaults to FALSE}
}
\value{
see \code{pretty_print}
}
\description{
Check if created LPJmL config JSON files (\link[lpjmlkit]{write_config}) are
valid and are ready to be used for simulations using lpjcheck for multiple
files.
}
\examples{
\dontrun{
library(tibble)
library(lpjmlkit)

model_path <- "./LPJmL_internal"
output_path <-"./my_runs"


# basic usage
my_params <- tibble(
  sim_name = c("scen1", "scen2"),
  random_seed = c(12, 404),
  pftpar.1.name = c("first_tree", NA),
  param.k_temp = c(NA, 0.03),
  new_phenology = c(TRUE, FALSE)
)

config_details <- write_config(
  params = my_params,
  model_path = model_path,
  output_path = output_path
)

check_config(x = config_details,
  model_path = model_path,
  output_path = output_path,
  return_output = FALSE
)
}
}
